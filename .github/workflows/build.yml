name: build

on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: build wheel
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: build wheel
        run: pip wheel . -w dist --no-deps
      - name: save wheel
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./dist/*.whl
  build_sdist:
    name: package source
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: install dependencies
        run: pip install dunamai
      - name: package source
        run: python setup.py sdist
      - name: save source package
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./dist/*.tar.gz
  build_executables:
    name: build standalone executable binaries with pyinstaller
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: install dependencies
        run: pip install pyinstaller .
      - name: build executable
        run: pyinstaller packetraven/packetraven.py --windowed --onefile
      - name: rename Mac OSX executable
        if: matrix.os == 'macos-latest'
        shell: bash
        run: mv dist/__main__ dist/packetraven
      - name: rename Windows executable
        if: matrix.os == 'windows-latest'
        shell: bash
        run: mv dist/__main__.exe dist/packetraven.exe
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          tag: ${{ github.ref }}
          file: dist/*
          file_glob: true
          repo_token: ${{ secrets.GH_TOKEN }}
  upload_pypi:
    name: publish to PyPI
    needs: [ build_wheels, build_sdist, build_executables ]
    runs-on: ubuntu-latest
    steps:
      - name: retrieve wheel(s) and source
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist
      - name: upload wheel(s) and source
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}