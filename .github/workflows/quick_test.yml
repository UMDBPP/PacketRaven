name: quick test

on:
  push:
    branches-ignore:
      - main
    paths:
      - '**.py'
      - '.github/workflows/tests_simple.yml'
      - 'pyproject.toml'

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: load cached Python installation
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: lint-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}
      - name: install linters
        run: pip install flake8 oitnb
      - name: lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: lint with oitnb
        run: oitnb . --check
  test:
    needs: lint
    name: quick test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: load cached Python installation
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}
      - name: install dependencies
        run: pip install ".[testing]"
      - name: run tests
        env:
          APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
          APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
          POSTGRES_HOSTNAME: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: test_database
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: test_password
        run: pytest --numprocesses auto
