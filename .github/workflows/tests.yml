name: tests

on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '.github/workflows/tests.yml'
  pull_request:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test (${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - if: runner.os == 'Linux'
        run: sudo apt install -y pkg-config libusb-1.0-0-dev libftdi1-dev libudev-dev
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test
  test_slow:
    name: test slow (${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-latest ]
    env:
      APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
    steps:
      - if: runner.os == 'Linux'
        run: sudo apt install -y pkg-config libusb-1.0-0-dev libftdi1-dev libudev-dev
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test
  # test_all_features:
  #   name: test all features (${{ matrix.runs-on }})
  #   runs-on: ${{ matrix.runs-on }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       runs-on: [ ubuntu-latest ]
  #   services:
  #     postgres:
  #       image: postgis/postgis:latest
  #       env:
  #         POSTGRES_PASSWORD: test_password
  #         POSTGRES_DB: test_database
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #   env:
  #     POSTGRES_HOSTNAME: localhost
  #     POSTGRES_PORT: 5432
  #     POSTGRES_DATABASE: test_database
  #     POSTGRES_USERNAME: postgres
  #     POSTGRES_PASSWORD: test_password
  #     APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
  #     APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
  #   steps:
  #     - if: runner.os == 'Linux'
  #       run: sudo apt install -y pkg-config libusb-1.0-0-dev libftdi1-dev libudev-dev
  #     - uses: actions/checkout@v3
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #     - run: cargo test
  build:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
    steps:
      - if: runner.os == 'Linux'
        run: sudo apt install -y pkg-config libusb-1.0-0-dev libftdi1-dev libudev-dev
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build --release
      - uses: actions/upload-artifact@v3
        with:
          name: packetraven-${{ runner.os }}
          path: target/release/packetraven*
      - if: (github.event_name == 'release' && github.event.action == 'published')
        uses: svenstaro/upload-release-action@v2
        with:
          asset_name: packetraven_${{ runner.os }}${{ runner.os == 'Windows' && '.exe' || '' }}
          file: target/release/packetraven${{ runner.os == 'Windows' && '.exe' || '' }}

