name: tests

on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '.github/workflows/tests.yml'
      - 'pyproject.toml'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: ${{ matrix.command }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        command: [ check, build ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo ${{ matrix.command }}
  test:
    name: test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    env:
      APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
      APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test
  test_with_postgres:
    name: test with postgres (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    services:
      postgres:
        image: postgis/postgis:latest
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      POSTGRES_HOSTNAME: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: test_database
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: test_password
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test --features postgres
