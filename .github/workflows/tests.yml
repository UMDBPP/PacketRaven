name: tests

on:
  push:
    paths:
      - '**.py'
      - '.github/workflows/tests.yml'
      - 'pyproject.toml'
      - 'tests/**'
  pull_request:

jobs:
  check:
    name: ${{ matrix.toxenv }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toxenv: [ check-style, check-build ]
        python: [ '3.11' ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: pip install "tox>=4.0"
      - run: tox -e ${{ matrix.toxenv }}
  test_without_postgres:
    name: ${{ matrix.toxenv }} (Python ${{ matrix.python }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toxenv: [ test-xdist ]
        os: [ macos-latest, windows-latest ]
        python: [ '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: pip install "tox>=4.0"
      - run: tox -e ${{ matrix.toxenv }}
        env:
          APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
          APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
      - if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unit
          fail_ci_if_error: true
  test_with_postgres:
    name: ${{ matrix.toxenv }} (Python ${{ matrix.python }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toxenv: [ test-xdist ]
        os: [ ubuntu-latest ]
        python: [ '3.8', '3.9', '3.10', '3.11' ]
        include:
          - toxenv: test-cov-xdist
            os: ubuntu-latest
            python: '3.11'
    services:
      postgres:
        image: postgis/postgis:latest
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: pip install "tox>=4.0"
      - run: tox -e ${{ matrix.toxenv }}
        env:
          APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
          APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
          POSTGRES_HOSTNAME: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: test_database
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: test_password
      - if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unit
          fail_ci_if_error: true
