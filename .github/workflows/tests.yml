name: tests

on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '.github/workflows/tests.yml'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test (${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-latest, macos-latest, windows-latest ]
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort
      APRS_FI_API_KEY: ${{ secrets.APRS_FI_API_KEY }}
      APRS_IS_PASSWORD: ${{ secrets.APRS_IS_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      - run: |
          cargo install cargo2junit grcov;
          cargo test $CARGO_OPTIONS -- -Z unstable-options --format json | cargo2junit > results.xml;
          zip -0 ccov.zip `find . \( -name "packetraven*.gc*" \) -print`;
          grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" --ignore "tests/*" -o lcov.info;
      - uses: codecov/codecov-action@v1
        with:
          files: ./lcov.info
          fail_ci_if_error: true
  test_with_postgres:
    needs: [ test ]
    name: test with postgres (${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-latest ]
    services:
      postgres:
        image: postgis/postgis:latest
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort
      POSTGRES_HOSTNAME: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: test_database
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: test_password
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: cargo test --features postgres

